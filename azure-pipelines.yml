# Docker
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub'
    repository: 'm8ndemo'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ae3b04c2-62d3-45ba-a41a-23b90ed156f4'
  imageRepository: 'm8ndemo'
  containerRegistry: 'm8ndevops'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub'
        repository: 'm8ndemo'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'chart'
        artifactName: 'chart'
        publishLocation: 'Container'

        #- stage: Deploy
        #  jobs:
        #  - deployment: KubernetesDeploy
        #    displayName: Deploy App
        #    pool:
        #      vmImage: 'ubuntu-20.04'
        #    environment: 'm8nkops'
        #    strategy:
        #      runOnce:
        #        deploy:
        #          steps:
        #          - download: current
        #            artifact: chart
        #          - script: |
        #              az login --service-principal -u $(azureArmClientId) -p $(azureArmClientSecret) --tenant $(azureArmTenantId)
        #              #echo "Switch Dorectory"
        #              cd /home/vsts/work/1/
        #              az aks get-credentials --resource-group KARTAPULT_PRODUCTION_RG --name KARTAPULT-PROD-AKS --admin
        #              helm upgrade api-marketing-automation chart -i --set apiMarketingAutomation.image.tag=$(tag) 
        #              #upload content to container versioned folder
        #              ## target new version
        #            displayName: 'Deploy in AKS'
