# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ae3b04c2-62d3-45ba-a41a-23b90ed156f4'
  imageRepository: 'nginx'
  containerRegistry: 'maniaksreg.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Deploy stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'maniaks'
        repository: 'nginx'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

          #    - task: PublishBuildArtifacts@1
          #      inputs:
          #        pathtoPublish: 'chart'
          #        artifactName: 'chart'
          #        publishLocation: 'Container'

    - script: |
        az login --service-principal -u $(azureArmClientId) -p $(azureArmClientSecret) --tenant $(azureArmTenantId)
        #echo "Switch Dorectory"
        cd /home/vsts/work/1/
        az aks get-credentials --resource-group mani-poc --name mani-aks --admin
        ls -la
        ls /home/vsts/work/1/s/chart -la
        #helm upgrade app chart --set sampleApp.image.tag=$(tag) -i
      displayName: 'Deploy in AKS'

      #- stage: Deploy
      #  jobs:
      #  - deployment: KubernetesDeploy
      #    displayName: Deploy App
      #    pool:
      #      vmImage: 'ubuntu-20.04'
      #    environment: 'maniaks'
      #    strategy:
      #      runOnce:
      #        deploy:
      #          steps:
      #          - download: current
      #            artifact: chart
      #          - script: |
      #              az login --service-principal -u $(azureArmClientId) -p $(azureArmClientSecret) --tenant $(azureArmTenantId)
      #              #echo "Switch Dorectory"
      #              cd /home/vsts/work/1/
      #              az aks get-credentials --resource-group mani-poc --name mani-aks --admin
      #              helm upgrade app chart -i --set sampleApp.image.tag=$(tag)
      #            displayName: 'Deploy in AKS'
